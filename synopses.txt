Фильтры
cat - передача из cin в cout
tee - промежуточный результат в конвейере и в файл
grep[-i (фильтрация без учета регистра), -v(вывод строк без содежания заданной строки), -А1(after+n строка после), -В1 (before+n строка до), -C1(+n до и после)] - фильтрация по содержанию
cut - извлечение данных из столбцов с указанием разделителя столбцов и количества байт cut -d: -f1,3 /etc/passwd | tail -4 
tr - преобразование символов tr 'e' 'E'
wc - подсчет слов, строк, символов
sort [-k1 (сортировка по n столбцу] - сортировка
uniq [-c(подсчет повтоерний)]- удаление повторяющейся строки в сортированном списке
comm [1,2,3 - столбцы которые не должны выводиться] - сравнение потоков данных(файлов)
od[-t x1(шестнадцатиричный), -b(восьмиричный), -c(ascii)] - сырые данные
sed [g(флаг рег. выраж. - глобальная замена) - stream editor с помощью регулярок

Задания к теме
1. Сохраните в файл ~/bashusers отсортированный в алфавитном порядке список имен пользователей из /etc/passwd, которые используют командную оболочку bash.
fgrep bash /etc/passwd | cut -d: -f1 | uniq | sort | tee bashusers
 2. Рассмотрите вывод утилиты /sbin/ifconfig. Создайте команду, с помощью которой будут выводиться исключительно IPv4-адреса. Сохраните результат в файл ~/ipaddr.
ifconfig | cat  | grep -E '(inet addr:)' | cut -d' ' -f12 | cut -d':' -f2

Утилиты
find [-name(название файла), -newer(файлы, созданные позднее чем этот), -exec(выполнить команду с найденными файлами)]- поиск файлов
locate - поиск с использованием индексирования (updatedb - сбор индексации(если не собраны))
date [+'%A %d-%m-%Y' (форматирование)][+%s (вывод в сек), [-d '1970-01-01 + 2000000000 seconds' (посчитать)]]- вывод инфы о дате и тд
cal [d year] - календарь текущего месяца
sleep [sec] - переход в режим ожидания (обычно используются в сценариях)
time [command] - выводит сколько времени тратится на выполнение комманды
gzip [filename] - сжатие файла
gunzip [filename] - распаковка файла
zcap, zmore - просмотр содержимого сжатых текстовых файлов
bzip2 - мощные архиваторы
bunzip2 - декомпресс
bzcap, bzmore - вывод содержимого сжатых тхт файлов     

Задания к теме
1. С помощью find найдите все обычные файлы (без директорий, именованных каналов и других файлов специальных типов) с расширением .so, расположенные в директории /lib и во всех ее поддиректориях. Выведите результат в файл ~/libso.
box@9895500b4906: ~ $ find /lib -type f -name "*.so" >libso
2. С помощью find найдите все обычные файлы с расширением .htm, расположенные в директории /usr/share/doc и во всех ее поддиректориях. Измените расширение на .html для найденных файлов. Выполните поиск и переименование с помощью find одной строкой.
box@9895500b4906: ~ $ find /usr/share/doc -type f -name "*.htm" -exec mv {} {}l \;

Регулярные выражения
grep [-G(Basic Regular Expressions), -E(Extended Regular Expressions), -P(Perl Regular Expressions)] -w[поиск по слова]
^(начало строки), $(конец) - якори
\bразделитель\b - разделитель слов
rename [//g(глобальная замена), //i(замена без учета регистра)]
sed [-i(интерактивная обработка файлов(т.е. не только из потока))]['s/pattern/&&/' (& ссылается на найденный шаблон(в примере служит для удвоения строчек))] ['s_\(Sun\)_\1ny_' (скобки для захвата, затем \1 ссылается на него)] - ред. потоков данных(описан выше)

Задание к теме
В директории /home/box/testdir дан набор тестовых файлов.
1. С помощью команды rename измените расширение у тестовых файлов с .text на .txt.
1) rename 's/.text/.txt/' * 
2)rename 's/(text)$/txt/' *

Редактор vim
Редактирование
a - ввод после текущего символа
A - после окончания текущей строки
i - ввод перед текущим символом
I - в начале текущей строки
o - создать новую строку после текущей строки
O - создать новую строку перед текущей строкой
Удаление
x - удалить текущий символ
X - удалить символ слева
r - режим ввода для одного нажатия
p - вставка символа после курсора(посл удаленного символа)
P - вставка символа до курсора(посл удаленного символа)
xp - замена местами двух символов
u - отменить последнее действие
. - повторить последнее действие
dd - перенос текущей строки
yy - копирование текущей строки 
3dd - перемещение трех строк
4yy - копирование четырех строк
^,0 - перемещение в начало текущей строки
$ - перемещение в конец текущей строки
d0(y0) - удалить(скопировать) все символы слева от текущей до начала
d$(y$) - удалить(скопировать) все символы от текущей до конца строки
J - объединение двух строк
yyp - дублирование строки
ddp - Замена местами двух строк
Навигация
w - переход к след слову
b - переход к предыдущему слову
3w - переход не 3 слова вперед
yw - копирование одного слова
5yb - копирование 5 слов до курсора
7dw - удаление 7 слов
Сохранение
:w(file name) - сохранить данные в файл
:q - завершить работу с редактором
:q! - завершить работу с редактором с отклонением всех изменений
:ZZ - сохранение данных и завершение работы с редактором
:q! - З
:w! - сохранение данных (и запись данных в защищенный от записи файл)
Поиск
/string - поиск строк к направлению к концу файла
?string - поиск строки по направлению к началу файла
n - переход к следующей найденной строке
/^string - поиск строки по направлению к концу файла с начале текущей строки файла
/string$ - поиск строки по направлению к концу файла с конца текущей строки файла
/br[aeio]l - поиск слов bral, brel, bril, brol
/\<he\> - поиск слова he (но не слов here или the)
Замена(нужно перейти в ex режим :.) 
4,8 s/foo/bar/g - замена строки foo на строки bar с 4 до 8 строки
1,$ s/foo/bar/g - замена строки foo на строки bar вщ всех строках файла
Чтение файлов
:r foo - выполняет чтение файла с именем foo и размещает результат после курсора
:r !foo - исполняет системную команду foo и размещает результат после курсора
Текстовые буферы
"add - Удалить текущую строку и переместить текст в буфер а
"g7yy - скопировать семь строк в буфер g
"ap - вставить данные из буфера а
Работа с множеством файлов
vi f1 f2 f3 - начать редактирование трех файлов с заданными именами
:args - вывести список файлов и указать активный файл
:n - начать редактирование следующего файла
:e - перейти к последнему отредактированному файлу
:rew - сместить указатель открытых файлов на первый файл
Абревиатуры строк
:ab long string - создать аббрев-ру строка для длинной строки
:una string - прекратить использование аббревиатуры строка
СООТВЕТСТВИЯ КЛАВИШ
:map <F6> :set number!<bar>set number?<CR>
Установка значений параметров
:set all (вывод списка, содержащего имена всех параметров)
:set number - отображения номера строк
~/.vimrc - конфиг vim
~/.exrc - конфиг vi

Сценарии
#! - she-bang
source ./vars; . ./vars - отображение переменных(???), (используется при подключении конфигурационных файлов, для извлечения значения переменных
bash -x vars - исполняемые команды оболочкой(после раскрытия команд)
#!/bin/bash -- - предотвращение подмены имен файлов сценариев(деактивирует механизм обработки параметров),
test condition ; echo echo $? - проверка на условие, 1 - false, 0 - true  
test condition && echo true || echo false - проверка на условие  c выводом true или false
[condition] && echo true || echo false - квадртаные скобки вместо test
[-d foo] - существует директория 
[-e bar] - сущ файл?
['/etc' = $PWD] - эквивалентны значения?
[$1 != 'secret'] - отличаются ли значение первого параметра от строки
[55 -lt $bar] - меньше ли 55 переменной $bar?
[$foo -ge 1000] - Больше либо равно?
["abc" < $bar] - строка меньше при сортировке чем переменная
[-f foo] - это файл?
[-r bar] - файл читаем?
[foo -nt bar] - новее файл?
[-o nounset] - параметр nounset активирован?
[condition1 -a condition2] - логическая операция "и"
[condition1 -o condition2] - логическая операция "или"
if [ condition ] 
    then action1
else action2
fi                 - конструкция if-else

if [ condition1]
    then action1
elif [ condition2]
    then action2
else 
    then action3
fi                 - конструкция if-else if-else

for i in 1 2 3; for i in {1..20}
do
    action
done               - цикл for

for file in *.ksh; do cp $file $file.bachup; done

i=100; while [ $i -ge 0 ]; do action; let i--; done - Обратный отсчет циклом while
while : do action; done - бесконечный цикл
let i=100; until [ $i -le -]; do action; let i--; done - цикл until

$n - n-й аргумент
$# - количество аргументов
$$ - идентификатор процесса
$? - последний код завершения процесса
$* - строковое представление аргументов всех
$0 - имя сценария
shift - перебор аргументов(напоминает итератор)
read - ввод во время выполнения сценария
getops - подобие switch, позволяет осуществлять разбор входных параметров

#!/bin/bash

while getopts ":afz" option;
do
 case $option in
  a)
    echo принят параметр -a
    ;;
  f)
    echo принят параметр -f
    ;;
  z)
    echo принят параметр -z
    ;;
  *)
    echo "некорректный параметр -$OPTARG"
    ;;
 esac
done


  1 #!/bin/bash
  2 
  3 while getopts ":af:z" option;
  4 do      
  5         case $option in
  6                 a)
  7  echo get -a 
  8 ;; 
  9 f) 
 10 echo get -f -$OPTARG 
 11 ;; 
 12 z) 
 13 echo get -z 
 14 ;; 
 15 :) 
 16 echo need arg with -f 
 17 ;; 
 18 *) 
 19 echo incorrect arg -OPTARG 
 20 ;; 
 21 esac 
 22 done

shopt - получение параметров функционирования командной оболочки, изменение значения переменных

eval - позволяет интерпретировать переданные аргументы как директивы сценария
answer=42; word=answer; eval "y=\$$word" ; echo $y(print 42)
lastweek='date --date="1 week ago"'; $lastweek(error); eval $lastweek(correct);
(( )) - позволяет сравнивать числовые значения
let -  арифм вычисления
function name { } - объявление функции, которая также может принимать аргументы

Управление учетными записями пользователей
whoami - имя учетной записи
who  - пользователи вошедшие в ОС
who am i  - инфа только о текущей сессии
w - инфа о вошешдших пользователях + чем они занимаются
id - инфа об идентификаторе пользователя, индентификаторе группы, список групп в которых состоит пользователь
su [user]- позволяет запускать командную оболочку от лица другого пользователя
su root - работа от лица root (запрашивает пароль)
su - [user] - -работа в окружении командной оболочки целевого пользователя(по умолчанию su сохраняет переменные окружения командной оболочки)
sudo [proc] - при редактировании /etc/sedoers позволяет пользователям запускать приложения с привелегиями других пользователей. Использование sudo без авторизации приведет к предупреждению(var/log/auth). Позволяет выполнить отдельную команду от имени другого пользователя не зная пароля целевого пользователя
visudo - редактор sudoers 
sudo su - в ubuntu пароль root изначально не установлен. факт, все польз группы admin могут использовать sudo для исполнения команд от лица root

УПРАВЛЕНИЕ УЧЕТНЫМИ ЗАПИСЯМИ ПОЛЬЗОВАТЕЛЕЙ
/etc/passwd - локальная база данных учетных записей, хранится в след форме: 
username, x, userid, usergroupid, describe, user home path, путь к исполняемому файлу командной оболочки, используемой для входа в систему

useradd [-m (создание доманшней директории пользователя)] [-d (установка имени домашней директории)][-c(добавление описания учетки)][-D(отобразить дефолтные настройки)] username - добавление уч записей в базу
useradd -m -d /hoome/yanina -c "yanina wickmayer" yanina

userdel [-r(удалить домашнюю директорию пользователя)] username - удаление учетки

usermod [-c(изменение описания)][-s(изменение командной оболочки для входа в систему)] - модиф параметров учетки
mkdir, chmod, chown - используются для создания вручную домашней директории пользователя
/etc/skel/ - выступает в качестве шаблона домашней директории стандратного профиля пользователя, которая передается при использовании параметра _-m утилиты useradd
chsh [-l (список доступных шеллов)][-s (выбор шелла)] - утилита, которой пользователи могут изменить свою командную оболочку для входа

Пароли пользователей
passwd [user] - утилита для установки паролей пользователей
/etc/shadow - файл, где хранятся пароли в зашифрованном виде
openssl passwd [-salt] password - позволяет зашифровать пароль(причем, каждый раз генерируется разные хэши для одного и того же пароля, поэтому, можно использовать параметр соль)
useradd [-p $(openssl passwd password)] username - Задание зашифрованного пароля пользователю. !!!команда в открытом виде останется в файле истории команд шелла!!!

crypt - функция библиотеки языка C
#include <stdio.h>
#define __USE_XOPEN
#include <unistd.h>

int main(int argc, char** argv){
if(argc==3){
printf("%s\n", crypt(argv[1],argv[2]));
}else{
printf("Использование: MyCrypt $password $salt\n");
}
return 0;
}
Пример: ./myCrypt password 'salt' -причем здесь используется устаревший DES. Можно исползовать md5 (достаточно указать $$):
./myCrypt password '$sa$lt'.
salt хранится в открытом виде в /etc/shadow/ между вторым $ и третьим $ поэтому использовать одно и то же слово и в качестве salt, и в качестве пароля нельзя.

/etc/login.defs - содержит некоторые стандартные значения параметров пользователей, таких как период устаревания паролей или ограничения длины паролей.
chage [-E(даты истечения срока действия пользовательской учетки)][-m(минимальный сроек действия пароля)][-M(максимальный срок действия пароля)][-l username(показать текущие значения параметров для пользователя)]  - утилита для изменения параметров паролей
usermod - может использоваться для блокировок, деактиваций, отключений учеток(также могут использоваться vi или vipw)

usermod -L username (перед хэшем добавится ! и пользователь не сможет пройти фазу аутентификации при использовании данного пароля, а root и другие su все еще будут иметь возможность использовать учетку) 
usermod -U username - отменить блокировку

vipw - утилита для редактирования локальных файлов

Профили пользователей
/etc/profile, /etc/environment, /etc/inputrc,  ./bashrc - файлы, с настройками, где задаются переменные типа PATH, HOME и т.д.
~/.bash_profile
~/.bash_login
~/.profile
~/.bash_logout - сценарий может исполняться при завершении работы(например для очистки консоли)

Группы пользователей
groupadd - создание группы
/etc/group - описывает членство в группах
groups - Отображает список групп в которых состоит данный пользователь
usermod -a(append исп только со -G, чтобы добавлять. без нее, если пользователь уже состоит в данной группе, его можно удалить) -G(group) - внесение пользователя в группе
groupmod -n newname oldname - переименование группы
groupdel name - удаление группы
gpasswd [-A(admin)][-a(add user)] [-d (удаление из группы)] - делегированиe функции контроля
/etc/gshadow - информация об админах групп пользователей
gpasswd -A "" groupname - удаление всех администраторов из группы
newgrp - возможность запустить дочернюю командную оболочку с нвой временной основной группой пользователя
vigr - может использоваться для редактирвоания файла /etc/group в ручном режиме

Права доступа к файлам
cut -d: -f1 /etc/passwd | column - вывод всех локальных учеток
chgrp - изменить имя группы пользователей владельцев файла
chown - изменить имя пользователя - владельца файла(также и группу владельцев)

типы файлов:
========================================
|Первый символ | Тип файла             |
========================================
| -            | Обычный файл          |
| d            | Директория            |
| l            | Символьная ссылка     |
| p            | Именованный канал     |
| b            | Блочное устройство    |
| c            | Символьное устройство |
| s            | Сокет                 |
========================================
Права доступа к файлам:
r- чтение содержимого файла / директории
w- изменение содержимого файла / создание и удаление файлов в директории
x- исполнение файла / вход в директорию

===================================================================================
| Позиция | Символы | Назначение                                                  |
===================================================================================
| 1       | -       | Указание на то, что это обычный файл.                       |
| 2-4     | rwx     | Права доступа для пользователя, владеющего файлом           |
| 5-7     | r-x     | Права доступа для пользователей из группы, владеющей файлом |
| 8-10    | r--     | Права доступа для остальных пользователей                   |
===================================================================================
chmod - установка прав доступа
Установка в восьмеричном представлении:
r - 4, w - 2, x - 1
umask - набор стандартных прав доступа при создании файла или директории
mkdir [-m 777 dir] - задание прав доступа для создаваемой директории
cp -p - сохранение прав доступа и меток времени при копировании файлов

Расширенные права доступа к файлам
бит sticky - запрет удаления файла, кто не является владельцем (отображается t(если установлен x), иначе T), также можно установить в восьмеричном значении прав доступа(chmod 1775 directoryname);

setgid - бит для директорий, когда необходимо, чтобы в качестве группы пользователей, владеющей всеми файлами в директории, использовалась группа пользователей, владеющая директорией. Отображается в той позиции, что и бит х для владеющей группы. отображается с пом s или S.
find / -type d -perm -2000 2> /dev/null - позволяет найти все директории с установленным битом setgid
setgid, setuid позволяют запускать файл с правами владеющего пользователя, а не инициализировавшего пользователя. т.е. файл, принадлежащий root, с установленным setuid, будет запущена от лица root;
find /usr/bin -type f -perm -04000 - поиск программ, с установленным setuid;
для sudo setuid устанавливается по умолчанию, поэтому любой пользователь может запустить ее с идентификатором пользователя root


Списки контроля доступа (Access Control List)
getfacl - чтение списков доступа 
setfacl [-u(acl для пользователя(если не указать, применится к текущей учетке))][-g(acl для группы(при отсутствии будет применено к группе пользователя))][-x (позволяет удалить элемент из acl)] [-b(дуалить весь acl] - запись или модификация списка контроля доступа

Маска прав acl 
Маска опис макс эффективные права доступа для любого из элементов списка. Маска рассчитывается каждый раз, когда используется setfacl или chmod.
setfacl --no-mask -m u:user:7 filename - предотвратить расчет маски прав
eiciel - графический инструмент для управления acl

Ссылки
структура inode - все метаданные файла(имя, дата создания, пользователь и тд)
df -i  - получить инфу о кол-ве используемых и доступных inode в смонтированной файловой системе
ls -li - идентификаторы inode
inode содержит указатель на данные в файле
Директория - особый вид файла, который содержит таблицу соответсвия между именами файлов и структурами inode.
ls -ali -вывод содержимого файла директории
Жесткие ссылки
Имеют те же права доступа, что оригинальный файл
ln - создание жесткой ссылки. имя ссылки ставится в соответсвие существующей структуре inode
find / -inum ###### 2> /dev/null - поиск файла с определенным идентификатором структуры inode.

Символьные(мягкие) ссылки
Такие ссылки не указывают на структуры inode, а являются соответствиями между именами файлов, но в то же время, имеют собственную структуру inode. Права доступа не решают, т.к. все равно будут использоваться права целевого файла. 
ln -s -создание символьной ссылки;
Жесткие ссылки ограничены своими разделами дисков, а символьные могут указывать на любые файлы из других файловых систем, даже сетевых;

Удаление ссылок
rm - может удалять ссылки

/proc/bus -содержит разпознанные ядром Линукс шины 
/proc/bus/usb/devices -файл, список соединенных usb-устройств
lsusb -утилита, отобр список соединенных usb-устройств
/var/lib/usbutils/usb.ids -сжатый gzip, содержит все известные идентификаторы описаний устройств usb
/usr/sbin/pci, lspci -список всех подключенных PCI устройств
/proc/interrupts -список идентификаторов запросов прерываний
dmesg -может использоваться для установления идентификаторов запросов прерываний, резервируемых для определенных устройств в процессе загрузки системы: dmesg | grep "irq 1[45]"

Порты ввода-вывода
/proc/ioports -содержимое это список портов ввода-вывода устройств

Технология DMA(Direct Memory Access)
Технология позволяет обеспечить прямой доступ к диапозону оперативной памяти
/proc/dma -файл, с инфой об используемых в данный момент каналах прямого доступа к памяти для устройств ISA. В ней не приводятся устройства PCI, использующие технологию прямого доступа к памяти, поэтому может оказаться полезной утилита dmesg.


/proc/bus содержит список шин компьютера
/proc/interrupts содержит список идентификаторов запросов прерываний в системе
/proc/ioports содержит список портов ввода-вывода устройств системы
/proc/dma содержит информацию об используемых в данный момент каналах прямого доступа к памяти для устройств ISA
/proc/bus/pci содержит список всех подсоединенных к системе устройств PCI
/proc/bus/usb/devices содержит список устройств usb, соединенных с вашей системой.
